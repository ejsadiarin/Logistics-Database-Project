package Views;

import java.sql.Date;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.text.html.parser.ContentModel;

import Controllers.CustomerController;

public class CustomerPanel extends JPanel {
    private CustomerController controller;
    private JTable customerTable;

    /**
     * Creates new form CustomerPanel
     */
    public CustomerPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        controller = new CustomerController();
        tablePane = new javax.swing.JScrollPane();
        vehicleTable = new javax.swing.JTable();
        newRecordButton = new javax.swing.JButton();
        updateRecordButton = new javax.swing.JButton();
        deleteRecordButton = new javax.swing.JButton();

        vehicleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CustomerID", "Company Name", "Customer Name", "Company Contact", "Billing Address", "Amount Paid", "Date Paid"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vehicleTable.getTableHeader().setReorderingAllowed(false);
        tablePane.setViewportView(vehicleTable);

        newRecordButton.setText("New Record");
        newRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newRecordButtonDriverTableActions(evt);
            }
        });

        updateRecordButton.setText("Update Record");
        updateRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRecordButtonActionPerformed(evt);
            }
        });

        deleteRecordButton.setText("Delete Record");
        deleteRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRecordButtonDriverTableActions(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(newRecordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                        .addComponent(updateRecordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteRecordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tablePane))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(tablePane, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteRecordButton)
                    .addComponent(updateRecordButton)
                    .addComponent(newRecordButton))
                .addContainerGap())
        );
    }// </editor-fold>                        

    public void refresh() {
        removeAll();
        initComponents();
        revalidate();
        repaint();
    }

    private void newRecordButtonDriverTableActions(java.awt.event.ActionEvent evt) {
        NewCustomerForm dialog = new NewCustomerForm(new javax.swing.JFrame(), true);
        dialog.setParentPanel(this);
        dialog.setVisible(true);
    }                                                  

    // TODO: update customer form
    private void updateRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {
            UpdateDriverForm dialog = new UpdateDriverForm(new javax.swing.JFrame(), true);
            dialog.setParentPanel(this);
            dialog.setFields(
                    (int)customerTable.getValueAt(customerTable.getSelectedRow(), 0),
                    (String)customerTable.getValueAt(customerTable.getSelectedRow(), 1),
                    String.valueOf(customerTable.getValueAt(customerTable.getSelectedRow(), 2)),
                    (String)customerTable.getValueAt(customerTable.getSelectedRow(), 3));
            dialog.setVisible(true);
    }                                                  

    private void deleteRecordButtonDriverTableActions(java.awt.event.ActionEvent evt) {
            controller.deleteRecord((int)customerTable.getValueAt(customerTable.getSelectedRow(), 0));
            refresh();
    }                                                     


    // Variables declaration - do not modify                     
    private javax.swing.JButton deleteRecordButton;
    private javax.swing.JButton newRecordButton;
    private javax.swing.JScrollPane tablePane;
    private javax.swing.JButton updateRecordButton;
    private javax.swing.JTable vehicleTable;
    // End of variables declaration                   
}
